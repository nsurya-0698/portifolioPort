{"ast":null,"code":"import _slicedToArray from\"/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import emailjs from'@emailjs/browser';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmailForm=function EmailForm(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),phone=_useState6[0],setPhone=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showNotification=_useState10[0],setShowNotification=_useState10[1];// State for notification\nvar _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];// State for error message\nvar resetForm=function resetForm(){setName('');setEmail('');setPhone('');setMessage('');};var handleSubmit=function handleSubmit(e){e.preventDefault();if(name.trim()===''){setError('Name is required.');return;}else if(phone.trim()===''){setError('Phone number is required.');return;}setError('');// Clear any previous error\n// Your EmailJS service ID, template ID, and Public Key\nvar serviceId='service_iv6t5r9';var templateId='template_cum0fbe';var publicKey='ebINNDIg7FPq8si3c';// Create a new object that contains dynamic template params\nvar templateParams={from_name:name,from_email:email,from_phone:phone,to_name:'Surya',message:message};// Send the email using EmailJS\nemailjs.send(serviceId,templateId,templateParams,publicKey).then(function(response){console.log('Email sent successfully!',response);setShowNotification(true);resetForm();setTimeout(function(){return setShowNotification(false);},3000);// Hide notification after 3 seconds\n}).catch(function(error){console.error('Error sending email:',error);});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"emailForm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formGroup\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Your Name\",value:name,onChange:function onChange(e){return setName(e.target.value);},className:\"formInput nameInput\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Your Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},className:\"formInput emailInput\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Your Phone Number\",value:phone,onChange:function onChange(e){return setPhone(e.target.value);},className:\"formInput phoneInput\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Message\",cols:\"30\",rows:\"10\",value:message,onChange:function onChange(e){return setMessage(e.target.value);},className:\"formTextarea\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send Email\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),showNotification&&/*#__PURE__*/_jsx(\"div\",{className:\"notification\",children:\"Form submitted successfully!\"})]});};export default EmailForm;","map":{"version":3,"sources":["/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/src/components/Contact/EmailForm.jsx"],"names":["React","useState","emailjs","EmailForm","name","setName","email","setEmail","phone","setPhone","message","setMessage","showNotification","setShowNotification","error","setError","resetForm","handleSubmit","e","preventDefault","trim","serviceId","templateId","publicKey","templateParams","from_name","from_email","from_phone","to_name","send","then","response","console","log","setTimeout","catch","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport emailjs from '@emailjs/browser';\n\nconst EmailForm = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [message, setMessage] = useState('');\n    const [showNotification, setShowNotification] = useState(false); // State for notification\n    const [error, setError] = useState(''); // State for error message\n  \n    const resetForm = () => {\n      setName('');\n      setEmail('');\n      setPhone('');\n      setMessage('');\n    };\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n\n      if (name.trim() === '') {\n        setError('Name is required.');\n        return;\n      } else if (phone.trim() === '') {\n        setError('Phone number is required.');\n        return;\n      } \n\n      setError(''); // Clear any previous error\n  \n      // Your EmailJS service ID, template ID, and Public Key\n      const serviceId = 'service_iv6t5r9';\n      const templateId = 'template_cum0fbe';\n      const publicKey = 'ebINNDIg7FPq8si3c';\n  \n      // Create a new object that contains dynamic template params\n      const templateParams = {\n        from_name: name,\n        from_email: email,\n        from_phone: phone,\n        to_name: 'Surya',\n        message: message,\n      };\n  \n      // Send the email using EmailJS\n      emailjs.send(serviceId, templateId, templateParams, publicKey)\n        .then((response) => {\n          console.log('Email sent successfully!', response);\n          setShowNotification(true);\n          resetForm();\n          setTimeout(() => setShowNotification(false), 3000); // Hide notification after 3 seconds\n        })\n        .catch((error) => {\n          console.error('Error sending email:', error);\n        });\n    };\n  \n    return (\n      <form onSubmit={handleSubmit} className='emailForm'>\n        <div className=\"formGroup\">\n          <input\n            type=\"text\"\n            placeholder=\"Your Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"formInput nameInput\"\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Your Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"formInput emailInput\"\n          />\n          <input\n            type=\"tel\"\n            placeholder=\"Your Phone Number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            className=\"formInput phoneInput\"\n          />\n        </div>\n        <textarea\n          placeholder=\"Message\"\n          cols=\"30\"\n          rows=\"10\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          className=\"formTextarea\"\n        />\n        <button type=\"submit\">Send Email</button>\n  \n        {error && <div className=\"error\">{error}</div>}\n        {showNotification && <div className=\"notification\">Form submitted successfully!</div>}\n      </form>\n    );\n  };\n  \n  export default EmailForm;"]},"metadata":{},"sourceType":"module"}