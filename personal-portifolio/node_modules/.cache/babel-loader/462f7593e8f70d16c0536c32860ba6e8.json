{"ast":null,"code":"import _asyncToGenerator from \"/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/node_modules/@babel/runtime/regenerator/index.js\";\nimport { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\n\nvar getLeftTime = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id, throttle, storage) {\n    var lastTime;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = Number;\n            _context.next = 3;\n            return storage.get(id);\n\n          case 3:\n            _context.t1 = _context.sent;\n\n            if (_context.t1) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.t1 = 0;\n\n          case 6:\n            _context.t2 = _context.t1;\n            lastTime = (0, _context.t0)(_context.t2);\n            return _context.abrupt(\"return\", throttle - Date.now() + lastTime);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getLeftTime(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var isLimitRateHit = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(defaultID, options, storage) {\n    var id, leftTime;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(!options.throttle || !storage)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", false);\n\n          case 2:\n            validateLimitRateParams(options.throttle, options.id);\n            id = options.id || defaultID;\n            _context2.next = 6;\n            return getLeftTime(id, options.throttle, storage);\n\n          case 6:\n            leftTime = _context2.sent;\n\n            if (!(leftTime > 0)) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", true);\n\n          case 9:\n            _context2.next = 11;\n            return storage.set(id, Date.now().toString());\n\n          case 11:\n            return _context2.abrupt(\"return\", false);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function isLimitRateHit(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js"],"names":["validateLimitRateParams","getLeftTime","id","throttle","storage","Number","get","lastTime","Date","now","isLimitRateHit","defaultID","options","leftTime","set","toString"],"mappings":";;AAAA,SAASA,uBAAT,QAAwC,oDAAxC;;AACA,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,EAAP,EAAWC,QAAX,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACCC,MADD;AAAA;AAAA,mBACeD,OAAO,CAACE,GAAR,CAAYJ,EAAZ,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,0BACmC,CADnC;;AAAA;AAAA;AACVK,YAAAA,QADU;AAAA,6CAETJ,QAAQ,GAAGK,IAAI,CAACC,GAAL,EAAX,GAAwBF,QAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXN,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAIA,OAAO,IAAMS,cAAc;AAAA,uEAAG,kBAAOC,SAAP,EAAkBC,OAAlB,EAA2BR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACtB,CAACQ,OAAO,CAACT,QAAT,IAAqB,CAACC,OADA;AAAA;AAAA;AAAA;;AAAA,8CAEf,KAFe;;AAAA;AAI1BJ,YAAAA,uBAAuB,CAACY,OAAO,CAACT,QAAT,EAAmBS,OAAO,CAACV,EAA3B,CAAvB;AACMA,YAAAA,EALoB,GAKfU,OAAO,CAACV,EAAR,IAAcS,SALC;AAAA;AAAA,mBAMHV,WAAW,CAACC,EAAD,EAAKU,OAAO,CAACT,QAAb,EAAuBC,OAAvB,CANR;;AAAA;AAMpBS,YAAAA,QANoB;;AAAA,kBAOtBA,QAAQ,GAAG,CAPW;AAAA;AAAA;AAAA;;AAAA,8CAQf,IARe;;AAAA;AAAA;AAAA,mBAUpBT,OAAO,CAACU,GAAR,CAAYZ,EAAZ,EAAgBM,IAAI,CAACC,GAAL,GAAWM,QAAX,EAAhB,CAVoB;;AAAA;AAAA,8CAWnB,KAXmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdL,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n"]},"metadata":{},"sourceType":"module"}