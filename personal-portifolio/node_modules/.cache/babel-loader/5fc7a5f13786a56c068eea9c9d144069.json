{"ast":null,"code":"import _asyncToGenerator from \"/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/node_modules/@babel/runtime/regenerator/index.js\";\nimport { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport var sendPost = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, data) {\n    var headers,\n        response,\n        message,\n        responseStatus,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            headers = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            _context.next = 3;\n            return fetch(store.origin + url, {\n              method: 'POST',\n              headers: headers,\n              body: data\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.text();\n\n          case 6:\n            message = _context.sent;\n            responseStatus = new EmailJSResponseStatus(response.status, message);\n\n            if (!response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", responseStatus);\n\n          case 10:\n            throw responseStatus;\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sendPost(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/node_modules/@emailjs/browser/es/api/sendPost.js"],"names":["EmailJSResponseStatus","store","sendPost","url","data","headers","fetch","origin","method","body","response","text","message","responseStatus","status","ok"],"mappings":";;AAAA,SAASA,qBAAT,QAAsC,iCAAtC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,IAAMC,QAAQ;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,YAAAA,OAAlB,2DAA4B,EAA5B;AAAA;AAAA,mBACGC,KAAK,CAACL,KAAK,CAACM,MAAN,GAAeJ,GAAhB,EAAqB;AAC7CK,cAAAA,MAAM,EAAE,MADqC;AAE7CH,cAAAA,OAAO,EAAPA,OAF6C;AAG7CI,cAAAA,IAAI,EAAEL;AAHuC,aAArB,CADR;;AAAA;AACdM,YAAAA,QADc;AAAA;AAAA,mBAMEA,QAAQ,CAACC,IAAT,EANF;;AAAA;AAMdC,YAAAA,OANc;AAOdC,YAAAA,cAPc,GAOG,IAAIb,qBAAJ,CAA0BU,QAAQ,CAACI,MAAnC,EAA2CF,OAA3C,CAPH;;AAAA,iBAQhBF,QAAQ,CAACK,EARO;AAAA;AAAA;AAAA;;AAAA,6CASTF,cATS;;AAAA;AAAA,kBAWdA,cAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARX,QAAQ;AAAA;AAAA;AAAA,GAAd","sourcesContent":["import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n"]},"metadata":{},"sourceType":"module"}