{"ast":null,"code":"var _jsxFileName = \"/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/src/components/Contact/EmailForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailForm = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n  const [showNotification, setShowNotification] = useState(false); // State for notification\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Your EmailJS service ID, template ID, and Public Key\n\n    const serviceId = 'service_iv6t5r9';\n    const templateId = 'template_cum0fbe';\n    const publicKey = 'ebINNDIg7FPq8si3c'; // For demo, show notification after 1 second\n\n    setTimeout(() => {\n      setShowNotification(true);\n      resetForm();\n      setTimeout(() => setShowNotification(false), 3000); // Hide notification after 3 seconds\n    }, 1000); // Create a new object that contains dynamic template params\n\n    const templateParams = {\n      from_name: name,\n      from_email: email,\n      to_name: 'Surya',\n      message: message\n    }; // Send the email using EmailJS\n\n    emailjs.send(serviceId, templateId, templateParams, publicKey).then(response => {\n      console.log('Email sent successfully!', response);\n      setName('');\n      setEmail('');\n      setMessage('');\n    }).catch(error => {\n      console.error('Error sending email:', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"emailForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"formInput nameInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Your Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"formInput nameInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Your Phone Number\",\n        value: phone,\n        onChange: e => setPhone(e.target.value),\n        className: \"formInput phoneInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Message\",\n      cols: \"30\",\n      rows: \"10\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      className: \"formInput nameInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: \"Form submitted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailForm, \"qxGW49Obyhejxkq//VH5+35S2eU=\");\n\n_c = EmailForm;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"sources":["/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/src/components/Contact/EmailForm.jsx"],"names":["React","useState","emailjs","EmailForm","name","setName","email","setEmail","phone","setPhone","message","setMessage","showNotification","setShowNotification","handleSubmit","e","preventDefault","serviceId","templateId","publicKey","setTimeout","resetForm","templateParams","from_name","from_email","to_name","send","then","response","console","log","catch","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport emailjs from '@emailjs/browser';\n\nconst EmailForm = () => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n  const [showNotification, setShowNotification] = useState(false); // State for notification\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Your EmailJS service ID, template ID, and Public Key\n    const serviceId = 'service_iv6t5r9';\n    const templateId = 'template_cum0fbe';\n    const publicKey = 'ebINNDIg7FPq8si3c';\n\n    // For demo, show notification after 1 second\n    setTimeout(() => {\n        setShowNotification(true);\n        resetForm();\n        setTimeout(() => setShowNotification(false), 3000); // Hide notification after 3 seconds\n      }, 1000);\n\n\n    // Create a new object that contains dynamic template params\n    const templateParams = {\n      from_name: name,\n      from_email: email,\n      to_name: 'Surya',\n      message: message,\n    };\n\n    // Send the email using EmailJS\n    emailjs.send(serviceId, templateId, templateParams, publicKey)\n      .then((response) => {\n        console.log('Email sent successfully!', response);\n        setName('');\n        setEmail('');\n        setMessage('');\n      })\n      .catch((error) => {\n        console.error('Error sending email:', error);\n      });\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className='emailForm'>\n      <div className=\"formInput\">\n        <input\n        type=\"text\"\n        placeholder=\"Your Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        className=\"formInput nameInput\"\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Your Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        className=\"formInput nameInput\"\n      />\n      <input\n          type=\"tel\"\n          placeholder=\"Your Phone Number\"\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n          className=\"formInput phoneInput\"\n        />\n      </div>\n      <textarea\n        placeholder=\"Message\"\n        cols=\"30\"\n        rows=\"10\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        className=\"formInput nameInput\"\n      >\n      </textarea>\n      <button type=\"submit\">Send Email</button>\n\n      {showNotification && <div className=\"notification\">Form submitted successfully!</div>}\n    </form>\n  )\n}\n\nexport default EmailForm"]},"metadata":{},"sourceType":"module"}