{"ast":null,"code":"var _jsxFileName = \"/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/src/components/Contact/EmailForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailForm = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n  const [showNotification, setShowNotification] = useState(false); // State for notification\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPhone('');\n    setMessage('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Your EmailJS service ID, template ID, and Public Key\n\n    const serviceId = 'service_iv6t5r9';\n    const templateId = 'template_cum0fbe';\n    const publicKey = 'ebINNDIg7FPq8si3c'; // Create a new object that contains dynamic template params\n\n    const templateParams = {\n      from_name: name,\n      from_email: email,\n      to_name: 'Surya',\n      message: message\n    }; // Send the email using EmailJS\n\n    emailjs.send(serviceId, templateId, templateParams, publicKey).then(response => {\n      console.log('Email sent successfully!', response);\n      setShowNotification(true);\n      resetForm();\n      setTimeout(() => setShowNotification(false), 3000); // Hide notification after 3 seconds\n    }).catch(error => {\n      console.error('Error sending email:', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"emailForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formGroup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"formInput nameInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Your Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"formInput emailInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Your Phone Number\",\n        value: phone,\n        onChange: e => setPhone(e.target.value),\n        className: \"formInput phoneInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Message\",\n      cols: \"30\",\n      rows: \"10\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      className: \"formTextarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: \"Form submitted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EmailForm, \"qxGW49Obyhejxkq//VH5+35S2eU=\");\n\n_c = EmailForm;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"sources":["/Users/suryatejanammi/Documents/GitHub/portifolioPort/personal-portifolio/src/components/Contact/EmailForm.jsx"],"names":["React","useState","emailjs","EmailForm","name","setName","email","setEmail","phone","setPhone","message","setMessage","showNotification","setShowNotification","resetForm","handleSubmit","e","preventDefault","serviceId","templateId","publicKey","templateParams","from_name","from_email","to_name","send","then","response","console","log","setTimeout","catch","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport emailjs from '@emailjs/browser';\n\nconst EmailForm = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [message, setMessage] = useState('');\n    const [showNotification, setShowNotification] = useState(false); // State for notification\n  \n    const resetForm = () => {\n      setName('');\n      setEmail('');\n      setPhone('');\n      setMessage('');\n    };\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n  \n      // Your EmailJS service ID, template ID, and Public Key\n      const serviceId = 'service_iv6t5r9';\n      const templateId = 'template_cum0fbe';\n      const publicKey = 'ebINNDIg7FPq8si3c';\n  \n      // Create a new object that contains dynamic template params\n      const templateParams = {\n        from_name: name,\n        from_email: email,\n        to_name: 'Surya',\n        message: message,\n      };\n  \n      // Send the email using EmailJS\n      emailjs.send(serviceId, templateId, templateParams, publicKey)\n        .then((response) => {\n          console.log('Email sent successfully!', response);\n          setShowNotification(true);\n          resetForm();\n          setTimeout(() => setShowNotification(false), 3000); // Hide notification after 3 seconds\n        })\n        .catch((error) => {\n          console.error('Error sending email:', error);\n        });\n    };\n  \n    return (\n      <form onSubmit={handleSubmit} className='emailForm'>\n        <div className=\"formGroup\">\n          <input\n            type=\"text\"\n            placeholder=\"Your Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"formInput nameInput\"\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Your Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"formInput emailInput\"\n          />\n          <input\n            type=\"tel\"\n            placeholder=\"Your Phone Number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            className=\"formInput phoneInput\"\n          />\n        </div>\n        <textarea\n          placeholder=\"Message\"\n          cols=\"30\"\n          rows=\"10\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          className=\"formTextarea\"\n        />\n        <button type=\"submit\">Send Email</button>\n  \n        {showNotification && <div className=\"notification\">Form submitted successfully!</div>}\n      </form>\n    );\n  };\n  \n  export default EmailForm;"]},"metadata":{},"sourceType":"module"}